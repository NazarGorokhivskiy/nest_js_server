swagger: "2.0"
info:
  description: "This is an API contract for Nest.js backend by Nazar Gorokhivskyi"
  version: "1.0.0"
  title: "Surfing Shop"
  contact:
    email: "nazargorokhivskiy@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api"
schemes:
- "https"
- "http"
paths:
  /goods:
    post:
      tags:
      - "goods"
      summary: "Add a new goods item"
      description: ""
      operationId: "addGoods"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Goods object that needs to be added to the store"
        required: true
        schema:
          type: "object"
          required:
          - "title"
          - "description"
          - "price"
          - "quantity"
          properties:
            title:
              type: "string"
              example: "Sufr board"
            description:
              type: "string"
              example: "An awesome Surfing board!"
            imageUrl:
              type: "string"
              example: "https://i.pinimg.com/564x/e9/66/9b/e9669b549f4558c87ce867cb06e554ac.jpg"
            price:
              type: "number"
              example: 100.50
            quantity:
              type: "integer"
              example: 20
      responses:
        "200":
          description: "Ok!"
        "405":
          description: "Invalid input"
    get:
      tags:
      - "goods"
      summary: "Get all stored goods"
      description: "Returns all goods from the store"
      operationId: "getAllGoods"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              type: "object"
              required:
              - "id"
              - "title"
              - "description"
              - "price"
              - "quantity"
              properties:
                id:
                  type: "integer"
                  example: 1337
                title:
                  type: "string"
                  example: "Sufr board"
                description:
                  type: "string"
                  example: "An awesome Surfing board!"
                imageUrl:
                  type: "string"
                  example: "https://i.pinimg.com/564x/e9/66/9b/e9669b549f4558c87ce867cb06e554ac.jpg"
                price:
                  type: "number"
                  example: 100.50
                quantity:
                  type: "integer"
                  example: 20
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Goods not found"
  /goods/{id}:
    patch:
      tags:
      - "goods"
      summary: "Update existing goods"
      description: ""
      operationId: "updateGoods"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the goods that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Goods object that needs to be added to the store"
        required: true
        schema:
          type: "object"
          properties:
            title:
              type: "string"
              example: "Sufr board"
            description:
              type: "string"
              example: "An awesome Surfing board!"
            imageUrl:
              type: "string"
              example: "https://i.pinimg.com/564x/e9/66/9b/e9669b549f4558c87ce867cb06e554ac.jpg"
            price:
              type: "number"
              example: 100.50
            quantity:
              type: "integer"
              example: 20
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Goods not found"
        "405":
          description: "Validation exception"
    get:
      tags:
      - "goods"
      summary: "Find goods by ID"
      description: "Returns a single goods"
      operationId: "getGoodsById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the goods to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            required:
            - "id"
            - "title"
            - "description"
            - "price"
            - "quantity"
            properties:
              id:
                type: "integer"
                example: 1337
              title:
                type: "string"
                example: "Sufr board"
              description:
                type: "string"
                example: "An awesome Surfing board!"
              imageUrl:
                type: "string"
                example: "https://i.pinimg.com/564x/e9/66/9b/e9669b549f4558c87ce867cb06e554ac.jpg"
              price:
                type: "number"
                example: 100.50
              quantity:
                type: "integer"
                example: 20
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Goods not found"
    delete:
      tags:
      - "goods"
      summary: "Deletes a goods item"
      description: ""
      operationId: "deleteGoods"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the goods to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Goods not found"
definitions:
  Goods:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Sufr board"
      description:
        type: "string"
        example: "An awesome Surfing board!"
      imageUrl:
        type: "string"
        example: "https://i.pinimg.com/564x/e9/66/9b/e9669b549f4558c87ce867cb06e554ac.jpg"
      price:
        type: "number"
        example: 100.50
      quantity:
        type: "integer"
        example: 20
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"